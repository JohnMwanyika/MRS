extends dashLayout
block content 
    main
        .container-fluid.px-4
            h1.mt-4 Dashboard
            ol.breadcrumb.mb-4
                li.breadcrumb-item.active Dashboard
            .row
                .col-xl-3.col-md-6
                    .card.bg-primary.text-white.mb-4
                        .card-body Primary Card
                        .card-footer.d-flex.align-items-center.justify-content-between
                            a.small.text-white.stretched-link(href="#") View Details
                            .small.text-white
                                i.fas.fa-angle-right
                .col-xl-3.col-md-6
                    .card.bg-warning.text-white.mb-4
                        .card-body Warning Card
                        .card-footer.d-flex.align-items-center.justify-content-between
                            a.small.text-white.stretched-link(href="#") View Details
                            .small.text-white
                                i.fas.fa-angle-right
                .col-xl-3.col-md-6
                    .card.bg-success.text-white.mb-4
                        .card-body Success Card
                        .card-footer.d-flex.align-items-center.justify-content-between
                            a.small.text-white.stretched-link(href="#") View Details
                            .small.text-white
                                i.fas.fa-angle-right
                .col-xl-3.col-md-6
                    .card.bg-danger.text-white.mb-4
                        .card-body Danger Card
                        .card-footer.d-flex.align-items-center.justify-content-between
                            a.small.text-white.stretched-link(href="#") View Details
                            .small.text-white
                                i.fas.fa-angle-right
            .row
                .col-xl-6
                    .card.mb-4
                        .card-header
                            i.fas.fa-chart-area.me-1
                            | Area Chart Example

                        .card-body
                            canvas#myAreaChart(width="100%" height="40")
                .col-xl-6
                    .card.mb-4
                        .card-header
                            i.fas.fa-chart-bar.me-1
                            | Bar Chart Example

                        .card-body
                            canvas#myBarChart(width="100%" height="40")
            .card.mb-4
                .card-header
                    i.fas.fa-table.me-1
                    | Recent Requests

                .card-body
                    table#datatablesSimple
                        thead
                            tr
                                th Email
                                th Name
                                th Department
                                th Type
                                th Status
                                th Date
                                th Action
                        tfoot
                            tr
                                th Email
                                th Name
                                th Department
                                th Type
                                th Status
                                th Date
                                th Action
                        tbody
                            each req in requests
                                tr
                                    td=req.email
                                    td=req.fullName
                                    td=req.department
                                    td=req.RequestType.name
                                    if (req.RequestStatus.name == 'Pending')
                                        td
                                            span.badge.text-bg-warning=req.RequestStatus.name
                                    else
                                        td
                                            span.badge.text-bg-success=req.RequestStatus.name
                                    td=moment(req.createdAt).format('MMMM Do YYYY, h:mm:ss a')

                                    if (req.RequestType.name == 'Reset password')
                                        td
                                            button.btn.btn-info.btn-sm(type="button" onclick=`completeReset('${req.fullName}', '${req.email}', '${req.department}',this)`)
                                                span.spinner-border.spinner-border-sm.mr-2.d-none(aria-hidden="true")
                                                | Reset
                                    else
                                        td
                                            button.btn.btn-info.btn-sm(type="button" onclick=`createMail('${req.fullName}', '${req.email}', '${req.department}',this)`)#createBtn
                                                span.spinner-border.spinner-border-sm.mr-2.d-none(aria-hidden="true")
                                                | Create 

    script.
        // Create a spinner object
        //- var spinner = new Spinner().spin();
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        function createMail(fullName, email,department,button) {
            // Disable the button and show the spinner animation
            button.disabled = true;
            button.querySelector('.spinner-border').classList.remove('d-none');
            const userRecord = {
                fullName,
                email,
                department
            }
            axios.post('/mails/api/new', userRecord)
            .then(response => {
                console.log(response)
                toastr[response.data.status](response.data.data, response.data.status)
                // Enable the button and hide the spinner animation
                button.disabled = false;
                button.querySelector('.spinner-border').classList.add('d-none');

                // Refresh the table with the updated data
                // Delay the page reload by 2 seconds
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                })
                .catch(error => {
                    console.log(response)
                    toastr[response.data.status](response.data.data, response.data.status)
                    // Enable the button and hide the spinner animation
                    button.disabled = false;
                    button.querySelector('.spinner-border').classList.add('d-none');
                });
        };
        //- function to notify user of successfull password reset
        function completeReset(fullName, email,department,button){
            button.disabled = true;
            button.querySelector('.spinner-border').classList.remove('d-none');

            const mailRecord = {
                fullName,
                email,
                department
            };
            axios.post('/mails/api/reset', mailRecord)
            .then(response => {
                console.log(response)
                toastr[response.data.status](response.data.data, response.data.status)
                // Enable the button and hide the spinner animation
                button.disabled = false;
                button.querySelector('.spinner-border').classList.add('d-none');

                // Refresh the table with the updated data
                // Delay the page reload by 2 seconds
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                })
                .catch(error => {
                    console.log(response)
                    toastr[response.data.status](response.data.data, response.data.status)
                    // Enable the button and hide the spinner animation
                    button.disabled = false;
                    button.querySelector('.spinner-border').classList.add('d-none');
                });
        }



